FROM {{ .DOCKER_BASE_IMAGE }}

LABEL maintainer="docker@couchbase.com"

ARG PKG_COMMAND="apt-get"
ARG UPDATE_COMMAND="apt-get update -y -q"
ARG CLEANUP_COMMAND="rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*"

# Install dependencies:
#  runit: for container process management
#  wget: for downloading .deb
#  tzdata: timezone info used by some N1QL functions
# Additional dependencies for system commands used by cbcollect_info:
#  lsof: lsof
#  lshw: lshw
#  sysstat: iostat, sar, mpstat
#  net-tools: ifconfig, arp, netstat
#  numactl: numactl
RUN set -x \
    && ${UPDATE_COMMAND} \
    && ${PKG_COMMAND} install -y -q wget tzdata \
      lsof lshw sysstat net-tools numactl bzip2 \
    && ${CLEANUP_COMMAND}

# Add runit
RUN set -x \
    && apt-get update \
    && apt-get install -y gcc git make \
    && cd /usr/src \
    && git clone https://github.com/couchbasedeps/runit \
    && cd runit \
    && git checkout edb631449d89d5b452a5992c6ffaa1e384fea697 \
    && ./package/compile \
    && cp ./command/* /sbin/ \
    && apt-get purge -y --autoremove gcc git make \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /usr/src/runit

ARG CB_RELEASE_URL={{ .CB_RELEASE_URL }}
ARG CB_PACKAGE={{ .CB_PACKAGE }}
ENV PATH=$PATH:/opt/enterprise-analytics/bin:/opt/enterprise-analytics/bin/tools:/opt/enterprise-analytics/bin/install

# Create Couchbase user with UID 1000 (necessary to match default
# boot2docker UID)
RUN set -x \
    && if getent group 1000 >/dev/null; then \
          existing_group=$(getent group 1000 | cut -d: -f1); \
          groupmod --new-name couchbase "${existing_group}"; \
       else \
          groupadd -g 1000 couchbase; \
       fi \
    && if getent passwd 1000 >/dev/null; then \
          existing_user=$(getent passwd 1000 | cut -d: -f1); \
          usermod --login couchbase -d /home/couchbase -m -g couchbase -s /bin/sh "${existing_user}"; \
       else \
          useradd couchbase -u 1000 -g couchbase -M -s /bin/sh; \
       fi

# Install enterprise-analytics
{{- if .FROM_LOCAL_INSTALL }}
RUN --mount=type=bind,source=.,target=/install \
{{- else }}
RUN \
{{- end }}
    set -x \
    && ${UPDATE_COMMAND} \
{{- if .FROM_LOCAL_INSTALL }}
    && mkdir /opt/enterprise-analytics \
    && cp -a /install/* /opt/enterprise-analytics \
    && rm -rf /opt/enterprise-analytics/Dockerfile /opt/enterprise-analytics/scripts \
    && chown -R couchbase:couchbase /opt/enterprise-analytics \
{{- else }}
    && export INSTALL_DONT_START_SERVER=1 \
{{-   if .CB_MULTIARCH }}
    && dpkgArch="$(dpkg --print-architecture)" \
    && CB_PACKAGE=$(echo ${CB_PACKAGE} | sed -e "s/@@ARCH@@/${dpkgArch}/") \
{{-   end }}
    && wget -N --no-verbose $CB_RELEASE_URL/$CB_PACKAGE \
    && ${PKG_COMMAND} install -y ./$CB_PACKAGE \
    && rm -f ./$CB_PACKAGE \
{{- end }}
    && ${CLEANUP_COMMAND} \
    && rm -rf /tmp/* /var/tmp/*

# Update VARIANT.txt to indicate we're running in our Docker image
RUN sed -i -e '1 s/$/\/docker/' /opt/enterprise-analytics/VARIANT.txt

# Add runit service script for enterprise-analytics
COPY scripts/run /etc/service/enterprise-analytics/run
RUN set -x \
    && mkdir -p /etc/service/enterprise-analytics/supervise \
    && chown -R couchbase:couchbase \
                /etc/service \
                /etc/service/enterprise-analytics/supervise

# Add dummy script for commands invoked by cbcollect_info that
# make no sense in a Docker container
COPY scripts/dummy.sh /usr/local/bin/
RUN set -x \
    && ln -s dummy.sh /usr/local/bin/iptables-save \
    && ln -s dummy.sh /usr/local/bin/lvdisplay \
    && ln -s dummy.sh /usr/local/bin/vgdisplay \
    && ln -s dummy.sh /usr/local/bin/pvdisplay

# Add bootstrap script
COPY scripts/entrypoint.sh /
ENTRYPOINT ["/entrypoint.sh"]
CMD ["enterprise-analytics"]

# 8091: Cluster administration REST/HTTP traffic, including Web Console
# 8095: Enterprise Analytics service REST/HTTP traffic
# 9123: Enterprise Analytics prometheus
# 11207: Data Service (SSL)
# 11210: Data Service
# 11280: Data Service prometheus
# 18091: Cluster administration REST/HTTP traffic, including Web Console (SSL)
# 18095: Enterprise Analytics service REST/HTTP traffic (SSL)
EXPOSE 8091 \
       8095 \
       9123 \
       11207 \
       11210 \
       11280 \
       18091 \
       18095

VOLUME /opt/enterprise-analytics/var
