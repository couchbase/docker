#!/bin/sh

# If HOME is set, Erlang requires that it be a writable directory.
# We can't guarantee that as it depends on which UID the container
# is started as. The couchbase-server script will handle it being
# unset, though, so do that for safety.
unset HOME

exec 2>&1

# Create directories where couchbase stores its data
cd /opt/couchbase
mkdir -p var/lib/couchbase \
         var/lib/couchbase/config \
         var/lib/couchbase/data \
         var/lib/couchbase/stats \
         var/lib/couchbase/logs \
         var/lib/moxi

# If container is running as root, ensure contents of /opt/couchbase/var are
# owned by the 'couchbase' user. If running as 'couchbase', don't attempt to
# claim ownership, but instead warn when encountering unwritable paths.
# Skip "inbox" as it may contain readonly-mounted things like k8s certs.
container_user=$(whoami)
if [ "${container_user}" = "root" ]; then
    find var -path var/lib/couchbase/inbox -prune -o -print0 | \
      xargs -0 chown --no-dereference couchbase:couchbase
else
    find var -path var/lib/couchbase/inbox -prune -o \! -writable -print0 | \
      xargs -0 -I {} echo "Warning: '/opt/couchbase/{}' is not writable by user '${container_user}'"
fi
unset container_user

if [ "$(whoami)" = "couchbase" ]; then
  exec /opt/couchbase/bin/couchbase-server -- -kernel global_enable_tracing false -noinput
else
  exec chpst -ucouchbase  /opt/couchbase/bin/couchbase-server -- -kernel global_enable_tracing false -noinput
fi
